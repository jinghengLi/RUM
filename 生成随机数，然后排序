#include <stdio.h>
#include <time.h>
#include <stdlib.h>
int compare_desc(const void* a, const void* b) {
    return (*(int*)a - * (int*)b);
}


int main() {
    srand((unsigned int)time(NULL));
    int n = 0;

    while (scanf("%d", &n) == 1 && n > 0 && n <= 1000) {
        int* arr = (int*)malloc(sizeof(int) * n);
        if (arr == NULL) {
            printf("内存分配失败\n");
            return 1;
        }

        for (int i = 0; i < n; i++) {
            arr[i] = rand() % 500 + 1;
        }
        qsort(arr, n, sizeof(int), compare_desc);

        for (int i = 0; i < n; i++) {
            // 如果当前数与前一个数不同，则打印
            if (i == 0 || arr[i] != arr[i - 1]) {
                printf("%d\n", arr[i]);
            }
        }
        free(arr);

    }
    return 0;
}






#include <stdlib.h>
#include <stdio.h>
#include <string.h>
 
int main()
{
    int n;
     
    int a;
    while(~scanf("%d", &n))
    {
        int count[1001] = {0};
        for (int i = 0; i < n; i++)
        {
            scanf("%d", &a);
            count[a] = 1;
        }
        for (int i = 0; i < 1001; i++)
        {
            if (count[i] == 1)
            {
                printf("%d\n", i);
            }
        }
    }
     
    return 0;
}
